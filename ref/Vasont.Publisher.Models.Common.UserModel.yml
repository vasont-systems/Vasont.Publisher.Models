### YamlMime:ManagedReference
items:
- uid: Vasont.Publisher.Models.Common.UserModel
  commentId: T:Vasont.Publisher.Models.Common.UserModel
  id: UserModel
  parent: Vasont.Publisher.Models.Common
  children:
  - Vasont.Publisher.Models.Common.UserModel.Email
  - Vasont.Publisher.Models.Common.UserModel.FirstName
  - Vasont.Publisher.Models.Common.UserModel.LastName
  - Vasont.Publisher.Models.Common.UserModel.Locale
  - Vasont.Publisher.Models.Common.UserModel.TimeZone
  - Vasont.Publisher.Models.Common.UserModel.UserId
  - Vasont.Publisher.Models.Common.UserModel.UserName
  - Vasont.Publisher.Models.Common.UserModel.UserType
  langs:
  - csharp
  - vb
  name: UserModel
  nameWithType: UserModel
  fullName: Vasont.Publisher.Models.Common.UserModel
  type: Class
  source:
    remote:
      path: src/Common/UserModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: UserModel
    path: Common/UserModel.cs
    startLine: 37
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Common
  summary: "\nThis class represents a user associated with a particular publish job.\n"
  example: []
  syntax:
    content: public class UserModel
    content.vb: Public Class UserModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Publisher.Models.Common.UserModel.UserId
  commentId: P:Vasont.Publisher.Models.Common.UserModel.UserId
  id: UserId
  parent: Vasont.Publisher.Models.Common.UserModel
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: UserModel.UserId
  fullName: Vasont.Publisher.Models.Common.UserModel.UserId
  type: Property
  source:
    remote:
      path: src/Common/UserModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: UserId
    path: Common/UserModel.cs
    startLine: 42
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Common
  summary: "\nGets or sets the user identifier.\n"
  example: []
  syntax:
    content: >-
      [StringLength(450)]

      public Guid UserId { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <StringLength(450)>

      Public Property UserId As Guid
  overload: Vasont.Publisher.Models.Common.UserModel.UserId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 450
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Common.UserModel.UserName
  commentId: P:Vasont.Publisher.Models.Common.UserModel.UserName
  id: UserName
  parent: Vasont.Publisher.Models.Common.UserModel
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: UserModel.UserName
  fullName: Vasont.Publisher.Models.Common.UserModel.UserName
  type: Property
  source:
    remote:
      path: src/Common/UserModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: UserName
    path: Common/UserModel.cs
    startLine: 49
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Common
  summary: "\nGets or sets the name of the user.\n"
  example: []
  syntax:
    content: >-
      [StringLength(256)]

      public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
      description: The name of the user.
    content.vb: >-
      <StringLength(256)>

      Public Property UserName As String
  overload: Vasont.Publisher.Models.Common.UserModel.UserName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 256
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Common.UserModel.Email
  commentId: P:Vasont.Publisher.Models.Common.UserModel.Email
  id: Email
  parent: Vasont.Publisher.Models.Common.UserModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: UserModel.Email
  fullName: Vasont.Publisher.Models.Common.UserModel.Email
  type: Property
  source:
    remote:
      path: src/Common/UserModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Email
    path: Common/UserModel.cs
    startLine: 56
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Common
  summary: "\nGets or sets the email.\n"
  example: []
  syntax:
    content: >-
      [StringLength(256)]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
      description: The email.
    content.vb: >-
      <StringLength(256)>

      Public Property Email As String
  overload: Vasont.Publisher.Models.Common.UserModel.Email*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 256
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Common.UserModel.FirstName
  commentId: P:Vasont.Publisher.Models.Common.UserModel.FirstName
  id: FirstName
  parent: Vasont.Publisher.Models.Common.UserModel
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: UserModel.FirstName
  fullName: Vasont.Publisher.Models.Common.UserModel.FirstName
  type: Property
  source:
    remote:
      path: src/Common/UserModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: FirstName
    path: Common/UserModel.cs
    startLine: 62
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Common
  summary: "\nGets or sets the first name.\n"
  example: []
  syntax:
    content: >-
      [StringLength(100)]

      public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(100)>

      Public Property FirstName As String
  overload: Vasont.Publisher.Models.Common.UserModel.FirstName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Common.UserModel.LastName
  commentId: P:Vasont.Publisher.Models.Common.UserModel.LastName
  id: LastName
  parent: Vasont.Publisher.Models.Common.UserModel
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: UserModel.LastName
  fullName: Vasont.Publisher.Models.Common.UserModel.LastName
  type: Property
  source:
    remote:
      path: src/Common/UserModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: LastName
    path: Common/UserModel.cs
    startLine: 68
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Common
  summary: "\nGets or sets the last name.\n"
  example: []
  syntax:
    content: >-
      [StringLength(100)]

      public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(100)>

      Public Property LastName As String
  overload: Vasont.Publisher.Models.Common.UserModel.LastName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Common.UserModel.Locale
  commentId: P:Vasont.Publisher.Models.Common.UserModel.Locale
  id: Locale
  parent: Vasont.Publisher.Models.Common.UserModel
  langs:
  - csharp
  - vb
  name: Locale
  nameWithType: UserModel.Locale
  fullName: Vasont.Publisher.Models.Common.UserModel.Locale
  type: Property
  source:
    remote:
      path: src/Common/UserModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Locale
    path: Common/UserModel.cs
    startLine: 75
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Common
  summary: "\nGets or sets the preferred language.\n"
  example: []
  syntax:
    content: >-
      [StringLength(5)]

      public string Locale { get; set; }
    parameters: []
    return:
      type: System.String
      description: The preferred language.
    content.vb: >-
      <StringLength(5)>

      Public Property Locale As String
  overload: Vasont.Publisher.Models.Common.UserModel.Locale*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Common.UserModel.TimeZone
  commentId: P:Vasont.Publisher.Models.Common.UserModel.TimeZone
  id: TimeZone
  parent: Vasont.Publisher.Models.Common.UserModel
  langs:
  - csharp
  - vb
  name: TimeZone
  nameWithType: UserModel.TimeZone
  fullName: Vasont.Publisher.Models.Common.UserModel.TimeZone
  type: Property
  source:
    remote:
      path: src/Common/UserModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: TimeZone
    path: Common/UserModel.cs
    startLine: 82
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Common
  summary: "\nGets or sets the time zone.\n"
  example: []
  syntax:
    content: >-
      [StringLength(100)]

      public string TimeZone { get; set; }
    parameters: []
    return:
      type: System.String
      description: The time zone.
    content.vb: >-
      <StringLength(100)>

      Public Property TimeZone As String
  overload: Vasont.Publisher.Models.Common.UserModel.TimeZone*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Common.UserModel.UserType
  commentId: P:Vasont.Publisher.Models.Common.UserModel.UserType
  id: UserType
  parent: Vasont.Publisher.Models.Common.UserModel
  langs:
  - csharp
  - vb
  name: UserType
  nameWithType: UserModel.UserType
  fullName: Vasont.Publisher.Models.Common.UserModel.UserType
  type: Property
  source:
    remote:
      path: src/Common/UserModel.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: UserType
    path: Common/UserModel.cs
    startLine: 89
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Common
  summary: "\nGets or sets the type of the user.\n"
  example: []
  syntax:
    content: public PublishServerUserType UserType { get; set; }
    parameters: []
    return:
      type: Vasont.Publisher.Models.Common.PublishServerUserType
      description: The type of the user.
    content.vb: Public Property UserType As PublishServerUserType
  overload: Vasont.Publisher.Models.Common.UserModel.UserType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Publisher.Models.Common
  commentId: N:Vasont.Publisher.Models.Common
  name: Vasont.Publisher.Models.Common
  nameWithType: Vasont.Publisher.Models.Common
  fullName: Vasont.Publisher.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Publisher.Models.Common.UserModel.UserId*
  commentId: Overload:Vasont.Publisher.Models.Common.UserModel.UserId
  name: UserId
  nameWithType: UserModel.UserId
  fullName: Vasont.Publisher.Models.Common.UserModel.UserId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Vasont.Publisher.Models.Common.UserModel.UserName*
  commentId: Overload:Vasont.Publisher.Models.Common.UserModel.UserName
  name: UserName
  nameWithType: UserModel.UserName
  fullName: Vasont.Publisher.Models.Common.UserModel.UserName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Publisher.Models.Common.UserModel.Email*
  commentId: Overload:Vasont.Publisher.Models.Common.UserModel.Email
  name: Email
  nameWithType: UserModel.Email
  fullName: Vasont.Publisher.Models.Common.UserModel.Email
- uid: Vasont.Publisher.Models.Common.UserModel.FirstName*
  commentId: Overload:Vasont.Publisher.Models.Common.UserModel.FirstName
  name: FirstName
  nameWithType: UserModel.FirstName
  fullName: Vasont.Publisher.Models.Common.UserModel.FirstName
- uid: Vasont.Publisher.Models.Common.UserModel.LastName*
  commentId: Overload:Vasont.Publisher.Models.Common.UserModel.LastName
  name: LastName
  nameWithType: UserModel.LastName
  fullName: Vasont.Publisher.Models.Common.UserModel.LastName
- uid: Vasont.Publisher.Models.Common.UserModel.Locale*
  commentId: Overload:Vasont.Publisher.Models.Common.UserModel.Locale
  name: Locale
  nameWithType: UserModel.Locale
  fullName: Vasont.Publisher.Models.Common.UserModel.Locale
- uid: Vasont.Publisher.Models.Common.UserModel.TimeZone*
  commentId: Overload:Vasont.Publisher.Models.Common.UserModel.TimeZone
  name: TimeZone
  nameWithType: UserModel.TimeZone
  fullName: Vasont.Publisher.Models.Common.UserModel.TimeZone
- uid: Vasont.Publisher.Models.Common.UserModel.UserType*
  commentId: Overload:Vasont.Publisher.Models.Common.UserModel.UserType
  name: UserType
  nameWithType: UserModel.UserType
  fullName: Vasont.Publisher.Models.Common.UserModel.UserType
- uid: Vasont.Publisher.Models.Common.PublishServerUserType
  commentId: T:Vasont.Publisher.Models.Common.PublishServerUserType
  parent: Vasont.Publisher.Models.Common
  name: PublishServerUserType
  nameWithType: PublishServerUserType
  fullName: Vasont.Publisher.Models.Common.PublishServerUserType
