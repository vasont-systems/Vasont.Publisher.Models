### YamlMime:ManagedReference
items:
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.Configuration
  id: Configuration
  parent: Vasont.Publisher.Models.Pipeline.Schema
  children:
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.BuildNumberFormat
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.CancelTimeoutInMinutes
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.ConfigurationId
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.Demands
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.Description
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.Name
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.Revisions
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.Schema
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.Source
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.Stages
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.StatusBadgesEnabled
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.Triggers
  - Vasont.Publisher.Models.Pipeline.Schema.Configuration.Variables
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: Configuration
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  type: Class
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Configuration
    path: Pipeline/Schema/Configuration.cs
    startLine: 20
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\n<p>This class represents the main entry of a Publisher Pipeline Configuration within the GlobalLink Publisher application.</p>\n<p>It is an object representation of a configuration script to be executed by the Publisher Agent.</p>\n<p>\nIt consists of a basic definition one or more stages, that consist of one or more jobs, each containing one or more Job steps to execute by the agent.\n</p>\n"
  example: []
  syntax:
    content: public class Configuration
    content.vb: Public Class Configuration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.ConfigurationId
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.ConfigurationId
  id: ConfigurationId
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: ConfigurationId
  nameWithType: Configuration.ConfigurationId
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.ConfigurationId
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: ConfigurationId
    path: Pipeline/Schema/Configuration.cs
    startLine: 26
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the unique configuration identifier.\n"
  example: []
  syntax:
    content: public Guid ConfigurationId { get; set; }
    parameters: []
    return:
      type: System.Guid
      description: The unique configuration identifier.
    content.vb: Public Property ConfigurationId As Guid
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.ConfigurationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Name
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Name
  id: Name
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Configuration.Name
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Name
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Name
    path: Pipeline/Schema/Configuration.cs
    startLine: 31
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the name/title of the configuration.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [MaxLength(100)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <MaxLength(100)>

      Public Property Name As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Description
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Description
  id: Description
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Configuration.Description
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Description
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Description
    path: Pipeline/Schema/Configuration.cs
    startLine: 38
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the description details of the configuration.\n"
  example: []
  syntax:
    content: >-
      [MaxLength(500)]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(500)>

      Public Property Description As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Description*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 500
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.BuildNumberFormat
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.BuildNumberFormat
  id: BuildNumberFormat
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: BuildNumberFormat
  nameWithType: Configuration.BuildNumberFormat
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.BuildNumberFormat
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: BuildNumberFormat
    path: Pipeline/Schema/Configuration.cs
    startLine: 44
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the output build and revision number template string.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [MaxLength(100)]

      public string BuildNumberFormat { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <MaxLength(100)>

      Public Property BuildNumberFormat As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.BuildNumberFormat*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.StatusBadgesEnabled
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.StatusBadgesEnabled
  id: StatusBadgesEnabled
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: StatusBadgesEnabled
  nameWithType: Configuration.StatusBadgesEnabled
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.StatusBadgesEnabled
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: StatusBadgesEnabled
    path: Pipeline/Schema/Configuration.cs
    startLine: 51
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a value indicating whether the status badges of the server are enabled for this configuration.\n"
  example: []
  syntax:
    content: public bool StatusBadgesEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property StatusBadgesEnabled As Boolean
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.StatusBadgesEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Demands
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Demands
  id: Demands
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: Demands
  nameWithType: Configuration.Demands
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Demands
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Demands
    path: Pipeline/Schema/Configuration.cs
    startLine: 56
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a list of demands necessary for the configuration to execute.\n"
  example: []
  syntax:
    content: public List<Demand> Demands { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Demand}
    content.vb: Public Property Demands As List(Of Demand)
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Demands*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.CancelTimeoutInMinutes
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.CancelTimeoutInMinutes
  id: CancelTimeoutInMinutes
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: CancelTimeoutInMinutes
  nameWithType: Configuration.CancelTimeoutInMinutes
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.CancelTimeoutInMinutes
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: CancelTimeoutInMinutes
    path: Pipeline/Schema/Configuration.cs
    startLine: 61
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the timeout in minutes that the agent run will wait before cancelling the job.\n"
  example: []
  syntax:
    content: public uint CancelTimeoutInMinutes { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property CancelTimeoutInMinutes As UInteger
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.CancelTimeoutInMinutes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Source
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Source
  id: Source
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: Configuration.Source
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Source
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Source
    path: Pipeline/Schema/Configuration.cs
    startLine: 66
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the pipeline content source configuration. This is where the configuration source content will be received.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public PipelineSourceBase Source { get; set; }
    parameters: []
    return:
      type: Vasont.Publisher.Models.Pipeline.Schema.PipelineSourceBase
    content.vb: >-
      <Required>

      Public Property Source As PipelineSourceBase
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Source*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Variables
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Variables
  id: Variables
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: Configuration.Variables
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Variables
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Variables
    path: Pipeline/Schema/Configuration.cs
    startLine: 72
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a list of optional pipeline configuration variables used within the job steps of the configuration.\n"
  example: []
  syntax:
    content: public List<PipelineVariable> Variables { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.PipelineVariable}
    content.vb: Public Property Variables As List(Of PipelineVariable)
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Variables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Stages
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Stages
  id: Stages
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: Stages
  nameWithType: Configuration.Stages
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Stages
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Stages
    path: Pipeline/Schema/Configuration.cs
    startLine: 77
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a list of stages for the agent to process and execute through. Stages are an organizational concept within the configuration.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public List<Stage> Stages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Stage}
    content.vb: >-
      <Required>

      Public Property Stages As List(Of Stage)
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Stages*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Triggers
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Triggers
  id: Triggers
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: Triggers
  nameWithType: Configuration.Triggers
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Triggers
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Triggers
    path: Pipeline/Schema/Configuration.cs
    startLine: 83
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a list of optional trigger configurations that will automate the execution of this configuration.\n"
  example: []
  syntax:
    content: public List<Trigger> Triggers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Trigger}
    content.vb: Public Property Triggers As List(Of Trigger)
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Triggers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Revisions
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Revisions
  id: Revisions
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: Revisions
  nameWithType: Configuration.Revisions
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Revisions
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Revisions
    path: Pipeline/Schema/Configuration.cs
    startLine: 88
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a list of revision audit records noting recent changes to this configuration.\n"
  example: []
  syntax:
    content: public List<Revision> Revisions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Revision}
    content.vb: Public Property Revisions As List(Of Revision)
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Revisions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Schema
  commentId: M:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Schema
  id: Schema
  parent: Vasont.Publisher.Models.Pipeline.Schema.Configuration
  langs:
  - csharp
  - vb
  name: Schema()
  nameWithType: Configuration.Schema()
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Schema()
  type: Method
  source:
    remote:
      path: src/Pipeline/Schema/Configuration.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Schema
    path: Pipeline/Schema/Configuration.cs
    startLine: 94
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nThis method is used to generate the JSON schema object dynamically for the configuration models.\n"
  example: []
  syntax:
    content: public JSchema Schema()
    return:
      type: Newtonsoft.Json.Schema.JSchema
      description: Returns a new <xref href="Newtonsoft.Json.Schema.JSchema" data-throw-if-not-resolved="false"></xref> object for the Configuration model.
    content.vb: Public Function Schema As JSchema
  overload: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Schema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Vasont.Publisher.Models.Pipeline.Schema
  commentId: N:Vasont.Publisher.Models.Pipeline.Schema
  name: Vasont.Publisher.Models.Pipeline.Schema
  nameWithType: Vasont.Publisher.Models.Pipeline.Schema
  fullName: Vasont.Publisher.Models.Pipeline.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.ConfigurationId*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.ConfigurationId
  name: ConfigurationId
  nameWithType: Configuration.ConfigurationId
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.ConfigurationId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Name*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Name
  name: Name
  nameWithType: Configuration.Name
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Description*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Description
  name: Description
  nameWithType: Configuration.Description
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Description
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.BuildNumberFormat*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.BuildNumberFormat
  name: BuildNumberFormat
  nameWithType: Configuration.BuildNumberFormat
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.BuildNumberFormat
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.StatusBadgesEnabled*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.StatusBadgesEnabled
  name: StatusBadgesEnabled
  nameWithType: Configuration.StatusBadgesEnabled
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.StatusBadgesEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Demands*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Demands
  name: Demands
  nameWithType: Configuration.Demands
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Demands
- uid: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Demand}
  commentId: T:System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Demand}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Demand>
  nameWithType: List<Demand>
  fullName: System.Collections.Generic.List<Vasont.Publisher.Models.Pipeline.Schema.Demand>
  nameWithType.vb: List(Of Demand)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Publisher.Models.Pipeline.Schema.Demand)
  name.vb: List(Of Demand)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Publisher.Models.Pipeline.Schema.Demand
    name: Demand
    nameWithType: Demand
    fullName: Vasont.Publisher.Models.Pipeline.Schema.Demand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Publisher.Models.Pipeline.Schema.Demand
    name: Demand
    nameWithType: Demand
    fullName: Vasont.Publisher.Models.Pipeline.Schema.Demand
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.CancelTimeoutInMinutes*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.CancelTimeoutInMinutes
  name: CancelTimeoutInMinutes
  nameWithType: Configuration.CancelTimeoutInMinutes
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.CancelTimeoutInMinutes
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Source*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Source
  name: Source
  nameWithType: Configuration.Source
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Source
- uid: Vasont.Publisher.Models.Pipeline.Schema.PipelineSourceBase
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.PipelineSourceBase
  parent: Vasont.Publisher.Models.Pipeline.Schema
  name: PipelineSourceBase
  nameWithType: PipelineSourceBase
  fullName: Vasont.Publisher.Models.Pipeline.Schema.PipelineSourceBase
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Variables*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Variables
  name: Variables
  nameWithType: Configuration.Variables
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Variables
- uid: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.PipelineVariable}
  commentId: T:System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.PipelineVariable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PipelineVariable>
  nameWithType: List<PipelineVariable>
  fullName: System.Collections.Generic.List<Vasont.Publisher.Models.Pipeline.Schema.PipelineVariable>
  nameWithType.vb: List(Of PipelineVariable)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Publisher.Models.Pipeline.Schema.PipelineVariable)
  name.vb: List(Of PipelineVariable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Publisher.Models.Pipeline.Schema.PipelineVariable
    name: PipelineVariable
    nameWithType: PipelineVariable
    fullName: Vasont.Publisher.Models.Pipeline.Schema.PipelineVariable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Publisher.Models.Pipeline.Schema.PipelineVariable
    name: PipelineVariable
    nameWithType: PipelineVariable
    fullName: Vasont.Publisher.Models.Pipeline.Schema.PipelineVariable
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Stages*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Stages
  name: Stages
  nameWithType: Configuration.Stages
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Stages
- uid: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Stage}
  commentId: T:System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Stage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Stage>
  nameWithType: List<Stage>
  fullName: System.Collections.Generic.List<Vasont.Publisher.Models.Pipeline.Schema.Stage>
  nameWithType.vb: List(Of Stage)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Publisher.Models.Pipeline.Schema.Stage)
  name.vb: List(Of Stage)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Publisher.Models.Pipeline.Schema.Stage
    name: Stage
    nameWithType: Stage
    fullName: Vasont.Publisher.Models.Pipeline.Schema.Stage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Publisher.Models.Pipeline.Schema.Stage
    name: Stage
    nameWithType: Stage
    fullName: Vasont.Publisher.Models.Pipeline.Schema.Stage
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Triggers*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Triggers
  name: Triggers
  nameWithType: Configuration.Triggers
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Triggers
- uid: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Trigger}
  commentId: T:System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Trigger}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Trigger>
  nameWithType: List<Trigger>
  fullName: System.Collections.Generic.List<Vasont.Publisher.Models.Pipeline.Schema.Trigger>
  nameWithType.vb: List(Of Trigger)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Publisher.Models.Pipeline.Schema.Trigger)
  name.vb: List(Of Trigger)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Publisher.Models.Pipeline.Schema.Trigger
    name: Trigger
    nameWithType: Trigger
    fullName: Vasont.Publisher.Models.Pipeline.Schema.Trigger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Publisher.Models.Pipeline.Schema.Trigger
    name: Trigger
    nameWithType: Trigger
    fullName: Vasont.Publisher.Models.Pipeline.Schema.Trigger
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Revisions*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Revisions
  name: Revisions
  nameWithType: Configuration.Revisions
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Revisions
- uid: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Revision}
  commentId: T:System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.Revision}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Revision>
  nameWithType: List<Revision>
  fullName: System.Collections.Generic.List<Vasont.Publisher.Models.Pipeline.Schema.Revision>
  nameWithType.vb: List(Of Revision)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Publisher.Models.Pipeline.Schema.Revision)
  name.vb: List(Of Revision)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Publisher.Models.Pipeline.Schema.Revision
    name: Revision
    nameWithType: Revision
    fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Publisher.Models.Pipeline.Schema.Revision
    name: Revision
    nameWithType: Revision
    fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Schema.JSchema
  commentId: T:Newtonsoft.Json.Schema.JSchema
  parent: Newtonsoft.Json.Schema
  isExternal: true
  name: JSchema
  nameWithType: JSchema
  fullName: Newtonsoft.Json.Schema.JSchema
- uid: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Schema*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Configuration.Schema
  name: Schema
  nameWithType: Configuration.Schema
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Configuration.Schema
- uid: Newtonsoft.Json.Schema
  commentId: N:Newtonsoft.Json.Schema
  isExternal: true
  name: Newtonsoft.Json.Schema
  nameWithType: Newtonsoft.Json.Schema
  fullName: Newtonsoft.Json.Schema
