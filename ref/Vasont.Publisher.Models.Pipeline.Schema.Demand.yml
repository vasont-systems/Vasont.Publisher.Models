### YamlMime:ManagedReference
items:
- uid: Vasont.Publisher.Models.Pipeline.Schema.Demand
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.Demand
  id: Demand
  parent: Vasont.Publisher.Models.Pipeline.Schema
  children:
  - Vasont.Publisher.Models.Pipeline.Schema.Demand.Name
  - Vasont.Publisher.Models.Pipeline.Schema.Demand.Operand
  - Vasont.Publisher.Models.Pipeline.Schema.Demand.Value
  langs:
  - csharp
  - vb
  name: Demand
  nameWithType: Demand
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Demand
  type: Class
  source:
    remote:
      path: src/Pipeline/Schema/Demand.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Demand
    path: Pipeline/Schema/Demand.cs
    startLine: 13
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nThis class represents a demand to be included in the publisher pipeline configuration.\n"
  remarks: Demands are specific tag requirements of a build image/runner needed for the particular publisher pipeline configuration to be executed.
  example: []
  syntax:
    content: public class Demand
    content.vb: Public Class Demand
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Publisher.Models.Pipeline.Schema.Demand.Name
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Demand.Name
  id: Name
  parent: Vasont.Publisher.Models.Pipeline.Schema.Demand
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Demand.Name
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Demand.Name
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Demand.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Name
    path: Pipeline/Schema/Demand.cs
    startLine: 18
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the demand name.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [MaxLength(100)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <MaxLength(100)>

      Public Property Name As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.Demand.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Demand.Operand
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Demand.Operand
  id: Operand
  parent: Vasont.Publisher.Models.Pipeline.Schema.Demand
  langs:
  - csharp
  - vb
  name: Operand
  nameWithType: Demand.Operand
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Demand.Operand
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Demand.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Operand
    path: Pipeline/Schema/Demand.cs
    startLine: 25
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the demand operand.\n"
  example: []
  syntax:
    content: public PipelineDemandOperand Operand { get; set; }
    parameters: []
    return:
      type: Vasont.Publisher.Models.Pipeline.Schema.PipelineDemandOperand
    content.vb: Public Property Operand As PipelineDemandOperand
  overload: Vasont.Publisher.Models.Pipeline.Schema.Demand.Operand*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Demand.Value
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Demand.Value
  id: Value
  parent: Vasont.Publisher.Models.Pipeline.Schema.Demand
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Demand.Value
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Demand.Value
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Demand.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Value
    path: Pipeline/Schema/Demand.cs
    startLine: 30
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the demand value.\n"
  example: []
  syntax:
    content: >-
      [MaxLength(1000)]

      public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(1000)>

      Public Property Value As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.Demand.Value*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Publisher.Models.Pipeline.Schema
  commentId: N:Vasont.Publisher.Models.Pipeline.Schema
  name: Vasont.Publisher.Models.Pipeline.Schema
  nameWithType: Vasont.Publisher.Models.Pipeline.Schema
  fullName: Vasont.Publisher.Models.Pipeline.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Publisher.Models.Pipeline.Schema.Demand.Name*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Demand.Name
  name: Name
  nameWithType: Demand.Name
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Demand.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Publisher.Models.Pipeline.Schema.Demand.Operand*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Demand.Operand
  name: Operand
  nameWithType: Demand.Operand
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Demand.Operand
- uid: Vasont.Publisher.Models.Pipeline.Schema.PipelineDemandOperand
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.PipelineDemandOperand
  parent: Vasont.Publisher.Models.Pipeline.Schema
  name: PipelineDemandOperand
  nameWithType: PipelineDemandOperand
  fullName: Vasont.Publisher.Models.Pipeline.Schema.PipelineDemandOperand
- uid: Vasont.Publisher.Models.Pipeline.Schema.Demand.Value*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Demand.Value
  name: Value
  nameWithType: Demand.Value
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Demand.Value
