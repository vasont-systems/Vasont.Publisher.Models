### YamlMime:ManagedReference
items:
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.Job
  id: Job
  parent: Vasont.Publisher.Models.Pipeline.Schema
  children:
  - Vasont.Publisher.Models.Pipeline.Schema.Job.ContinueOnError
  - Vasont.Publisher.Models.Pipeline.Schema.Job.Dependencies
  - Vasont.Publisher.Models.Pipeline.Schema.Job.Description
  - Vasont.Publisher.Models.Pipeline.Schema.Job.Enabled
  - Vasont.Publisher.Models.Pipeline.Schema.Job.JobId
  - Vasont.Publisher.Models.Pipeline.Schema.Job.Name
  - Vasont.Publisher.Models.Pipeline.Schema.Job.Pool
  - Vasont.Publisher.Models.Pipeline.Schema.Job.Strategy
  - Vasont.Publisher.Models.Pipeline.Schema.Job.Tasks
  - Vasont.Publisher.Models.Pipeline.Schema.Job.TimeoutInMinutes
  - Vasont.Publisher.Models.Pipeline.Schema.Job.Workspace
  langs:
  - csharp
  - vb
  name: Job
  nameWithType: Job
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job
  type: Class
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Job
    path: Pipeline/Schema/Job.cs
    startLine: 14
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nThis class represents a job in the pipeline configuration.\n"
  example: []
  syntax:
    content: public class Job
    content.vb: Public Class Job
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.JobId
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.JobId
  id: JobId
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: JobId
  nameWithType: Job.JobId
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.JobId
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: JobId
    path: Pipeline/Schema/Job.cs
    startLine: 20
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the unique job identifier.\n"
  example: []
  syntax:
    content: public Guid JobId { get; set; }
    parameters: []
    return:
      type: System.Guid
      description: The job identifier.
    content.vb: Public Property JobId As Guid
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.JobId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Name
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.Name
  id: Name
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Job.Name
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Name
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Name
    path: Pipeline/Schema/Job.cs
    startLine: 25
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job name.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [MaxLength(100)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <MaxLength(100)>

      Public Property Name As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Description
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.Description
  id: Description
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Job.Description
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Description
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Description
    path: Pipeline/Schema/Job.cs
    startLine: 32
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the description.\n"
  example: []
  syntax:
    content: >-
      [MaxLength(1000)]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(1000)>

      Public Property Description As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.Description*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Dependencies
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.Dependencies
  id: Dependencies
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: Dependencies
  nameWithType: Job.Dependencies
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Dependencies
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Dependencies
    path: Pipeline/Schema/Job.cs
    startLine: 38
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a list of dependency names required for this job.\n"
  example: []
  syntax:
    content: public List<string> Dependencies { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Dependencies As List(Of String)
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.Dependencies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Strategy
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.Strategy
  id: Strategy
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: Strategy
  nameWithType: Job.Strategy
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Strategy
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Strategy
    path: Pipeline/Schema/Job.cs
    startLine: 43
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job strategy configuration.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public JobStrategy Strategy { get; set; }
    parameters: []
    return:
      type: Vasont.Publisher.Models.Pipeline.Schema.JobStrategy
    content.vb: >-
      <Required>

      Public Property Strategy As JobStrategy
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.Strategy*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.ContinueOnError
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.ContinueOnError
  id: ContinueOnError
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: ContinueOnError
  nameWithType: Job.ContinueOnError
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.ContinueOnError
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: ContinueOnError
    path: Pipeline/Schema/Job.cs
    startLine: 49
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a value indicating whether the job will continue if one or more tasks return an error result.\n"
  example: []
  syntax:
    content: public bool ContinueOnError { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ContinueOnError As Boolean
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.ContinueOnError*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.TimeoutInMinutes
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.TimeoutInMinutes
  id: TimeoutInMinutes
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: TimeoutInMinutes
  nameWithType: Job.TimeoutInMinutes
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.TimeoutInMinutes
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: TimeoutInMinutes
    path: Pipeline/Schema/Job.cs
    startLine: 54
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the timeout in minutes that the job will wait before the task runner stops the job for failing to complete.\n"
  example: []
  syntax:
    content: public uint TimeoutInMinutes { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property TimeoutInMinutes As UInteger
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.TimeoutInMinutes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Pool
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.Pool
  id: Pool
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: Pool
  nameWithType: Job.Pool
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Pool
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Pool
    path: Pipeline/Schema/Job.cs
    startLine: 59
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job pool configuration.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public JobPoolConfiguration Pool { get; set; }
    parameters: []
    return:
      type: Vasont.Publisher.Models.Pipeline.Schema.JobPoolConfiguration
    content.vb: >-
      <Required>

      Public Property Pool As JobPoolConfiguration
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.Pool*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Workspace
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.Workspace
  id: Workspace
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: Workspace
  nameWithType: Job.Workspace
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Workspace
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Workspace
    path: Pipeline/Schema/Job.cs
    startLine: 65
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job workspace configuration.\n"
  example: []
  syntax:
    content: public JobWorkspaceConfiguration Workspace { get; set; }
    parameters: []
    return:
      type: Vasont.Publisher.Models.Pipeline.Schema.JobWorkspaceConfiguration
    content.vb: Public Property Workspace As JobWorkspaceConfiguration
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.Workspace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Tasks
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.Tasks
  id: Tasks
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: Tasks
  nameWithType: Job.Tasks
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Tasks
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Tasks
    path: Pipeline/Schema/Job.cs
    startLine: 70
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a list of job tasks to execute within the configuration.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public List<JobTask> Tasks { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.JobTask}
    content.vb: >-
      <Required>

      Public Property Tasks As List(Of JobTask)
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.Tasks*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Enabled
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Job.Enabled
  id: Enabled
  parent: Vasont.Publisher.Models.Pipeline.Schema.Job
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: Job.Enabled
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Enabled
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Job.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Enabled
    path: Pipeline/Schema/Job.cs
    startLine: 76
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a value indicating whether the job is enabled within the configuration.\n"
  example: []
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Vasont.Publisher.Models.Pipeline.Schema.Job.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Publisher.Models.Pipeline.Schema
  commentId: N:Vasont.Publisher.Models.Pipeline.Schema
  name: Vasont.Publisher.Models.Pipeline.Schema
  nameWithType: Vasont.Publisher.Models.Pipeline.Schema
  fullName: Vasont.Publisher.Models.Pipeline.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.JobId*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.JobId
  name: JobId
  nameWithType: Job.JobId
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.JobId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Name*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.Name
  name: Name
  nameWithType: Job.Name
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Description*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.Description
  name: Description
  nameWithType: Job.Description
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Description
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Dependencies*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.Dependencies
  name: Dependencies
  nameWithType: Job.Dependencies
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Dependencies
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Strategy*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.Strategy
  name: Strategy
  nameWithType: Job.Strategy
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Strategy
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobStrategy
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.JobStrategy
  parent: Vasont.Publisher.Models.Pipeline.Schema
  name: JobStrategy
  nameWithType: JobStrategy
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobStrategy
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.ContinueOnError*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.ContinueOnError
  name: ContinueOnError
  nameWithType: Job.ContinueOnError
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.ContinueOnError
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.TimeoutInMinutes*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.TimeoutInMinutes
  name: TimeoutInMinutes
  nameWithType: Job.TimeoutInMinutes
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.TimeoutInMinutes
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Pool*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.Pool
  name: Pool
  nameWithType: Job.Pool
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Pool
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobPoolConfiguration
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.JobPoolConfiguration
  parent: Vasont.Publisher.Models.Pipeline.Schema
  name: JobPoolConfiguration
  nameWithType: JobPoolConfiguration
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobPoolConfiguration
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Workspace*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.Workspace
  name: Workspace
  nameWithType: Job.Workspace
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Workspace
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobWorkspaceConfiguration
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.JobWorkspaceConfiguration
  parent: Vasont.Publisher.Models.Pipeline.Schema
  name: JobWorkspaceConfiguration
  nameWithType: JobWorkspaceConfiguration
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobWorkspaceConfiguration
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Tasks*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.Tasks
  name: Tasks
  nameWithType: Job.Tasks
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Tasks
- uid: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.JobTask}
  commentId: T:System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.JobTask}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<JobTask>
  nameWithType: List<JobTask>
  fullName: System.Collections.Generic.List<Vasont.Publisher.Models.Pipeline.Schema.JobTask>
  nameWithType.vb: List(Of JobTask)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Publisher.Models.Pipeline.Schema.JobTask)
  name.vb: List(Of JobTask)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask
    name: JobTask
    nameWithType: JobTask
    fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask
    name: JobTask
    nameWithType: JobTask
    fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Publisher.Models.Pipeline.Schema.Job.Enabled*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Job.Enabled
  name: Enabled
  nameWithType: Job.Enabled
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Job.Enabled
