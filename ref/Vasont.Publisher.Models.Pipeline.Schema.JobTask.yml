### YamlMime:ManagedReference
items:
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.JobTask
  id: JobTask
  parent: Vasont.Publisher.Models.Pipeline.Schema
  children:
  - Vasont.Publisher.Models.Pipeline.Schema.JobTask.Command
  - Vasont.Publisher.Models.Pipeline.Schema.JobTask.Configuration
  - Vasont.Publisher.Models.Pipeline.Schema.JobTask.Description
  - Vasont.Publisher.Models.Pipeline.Schema.JobTask.Enabled
  - Vasont.Publisher.Models.Pipeline.Schema.JobTask.JobStepId
  - Vasont.Publisher.Models.Pipeline.Schema.JobTask.Name
  - Vasont.Publisher.Models.Pipeline.Schema.JobTask.OutputVariables
  - Vasont.Publisher.Models.Pipeline.Schema.JobTask.Version
  langs:
  - csharp
  - vb
  name: JobTask
  nameWithType: JobTask
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  type: Class
  source:
    remote:
      path: src/Pipeline/Schema/JobTask.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: JobTask
    path: Pipeline/Schema/JobTask.cs
    startLine: 145
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job task configuration for a pipeline job execution.\n"
  example: []
  syntax:
    content: public class JobTask
    content.vb: Public Class JobTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.JobStepId
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.JobTask.JobStepId
  id: JobStepId
  parent: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  langs:
  - csharp
  - vb
  name: JobStepId
  nameWithType: JobTask.JobStepId
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.JobStepId
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/JobTask.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: JobStepId
    path: Pipeline/Schema/JobTask.cs
    startLine: 151
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job step identifier.\n"
  example: []
  syntax:
    content: public Guid JobStepId { get; set; }
    parameters: []
    return:
      type: System.Guid
      description: The job step identifier.
    content.vb: Public Property JobStepId As Guid
  overload: Vasont.Publisher.Models.Pipeline.Schema.JobTask.JobStepId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Name
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Name
  id: Name
  parent: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: JobTask.Name
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Name
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/JobTask.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Name
    path: Pipeline/Schema/JobTask.cs
    startLine: 156
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job task internal name.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [MaxLength(100)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <MaxLength(100)>

      Public Property Name As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Description
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Description
  id: Description
  parent: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: JobTask.Description
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Description
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/JobTask.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Description
    path: Pipeline/Schema/JobTask.cs
    startLine: 163
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job task description.\n"
  example: []
  syntax:
    content: >-
      [MaxLength(1000)]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(1000)>

      Public Property Description As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Description*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Version
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Version
  id: Version
  parent: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: JobTask.Version
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Version
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/JobTask.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Version
    path: Pipeline/Schema/JobTask.cs
    startLine: 170
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the version.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public string Version { get; set; }
    parameters: []
    return:
      type: System.String
      description: The version.
    content.vb: >-
      <Required>

      Public Property Version As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Version*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Command
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Command
  id: Command
  parent: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: JobTask.Command
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Command
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/JobTask.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Command
    path: Pipeline/Schema/JobTask.cs
    startLine: 176
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job task plugin command to execute within the job.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public JobTaskCommand Command { get; set; }
    parameters: []
    return:
      type: Vasont.Publisher.Models.Pipeline.Schema.JobTaskCommand
    content.vb: >-
      <Required>

      Public Property Command As JobTaskCommand
  overload: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Command*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Enabled
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Enabled
  id: Enabled
  parent: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: JobTask.Enabled
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Enabled
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/JobTask.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Enabled
    path: Pipeline/Schema/JobTask.cs
    startLine: 182
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a value indicating whether the step is enabled.\n"
  example: []
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.OutputVariables
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.JobTask.OutputVariables
  id: OutputVariables
  parent: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  langs:
  - csharp
  - vb
  name: OutputVariables
  nameWithType: JobTask.OutputVariables
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.OutputVariables
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/JobTask.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: OutputVariables
    path: Pipeline/Schema/JobTask.cs
    startLine: 187
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the job task output variables used within the overall job execution.\n"
  example: []
  syntax:
    content: public List<JobStepOutputVariable> OutputVariables { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.JobStepOutputVariable}
    content.vb: Public Property OutputVariables As List(Of JobStepOutputVariable)
  overload: Vasont.Publisher.Models.Pipeline.Schema.JobTask.OutputVariables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Configuration
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Configuration
  id: Configuration
  parent: Vasont.Publisher.Models.Pipeline.Schema.JobTask
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: JobTask.Configuration
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Configuration
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/JobTask.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Publisher.Models.git
    id: Configuration
    path: Pipeline/Schema/JobTask.cs
    startLine: 192
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the custom configuration parameters for the selected step plugin.\n"
  example: []
  syntax:
    content: public Dictionary<string, string> Configuration { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property Configuration As Dictionary(Of String, String)
  overload: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Configuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Publisher.Models.Pipeline.Schema
  commentId: N:Vasont.Publisher.Models.Pipeline.Schema
  name: Vasont.Publisher.Models.Pipeline.Schema
  nameWithType: Vasont.Publisher.Models.Pipeline.Schema
  fullName: Vasont.Publisher.Models.Pipeline.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.JobStepId*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.JobTask.JobStepId
  name: JobStepId
  nameWithType: JobTask.JobStepId
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.JobStepId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Name*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Name
  name: Name
  nameWithType: JobTask.Name
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Description*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Description
  name: Description
  nameWithType: JobTask.Description
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Description
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Version*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Version
  name: Version
  nameWithType: JobTask.Version
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Version
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Command*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Command
  name: Command
  nameWithType: JobTask.Command
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Command
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTaskCommand
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.JobTaskCommand
  parent: Vasont.Publisher.Models.Pipeline.Schema
  name: JobTaskCommand
  nameWithType: JobTaskCommand
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTaskCommand
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Enabled*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Enabled
  name: Enabled
  nameWithType: JobTask.Enabled
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.OutputVariables*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.JobTask.OutputVariables
  name: OutputVariables
  nameWithType: JobTask.OutputVariables
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.OutputVariables
- uid: System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.JobStepOutputVariable}
  commentId: T:System.Collections.Generic.List{Vasont.Publisher.Models.Pipeline.Schema.JobStepOutputVariable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<JobStepOutputVariable>
  nameWithType: List<JobStepOutputVariable>
  fullName: System.Collections.Generic.List<Vasont.Publisher.Models.Pipeline.Schema.JobStepOutputVariable>
  nameWithType.vb: List(Of JobStepOutputVariable)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Publisher.Models.Pipeline.Schema.JobStepOutputVariable)
  name.vb: List(Of JobStepOutputVariable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Publisher.Models.Pipeline.Schema.JobStepOutputVariable
    name: JobStepOutputVariable
    nameWithType: JobStepOutputVariable
    fullName: Vasont.Publisher.Models.Pipeline.Schema.JobStepOutputVariable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Publisher.Models.Pipeline.Schema.JobStepOutputVariable
    name: JobStepOutputVariable
    nameWithType: JobStepOutputVariable
    fullName: Vasont.Publisher.Models.Pipeline.Schema.JobStepOutputVariable
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Configuration*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.JobTask.Configuration
  name: Configuration
  nameWithType: JobTask.Configuration
  fullName: Vasont.Publisher.Models.Pipeline.Schema.JobTask.Configuration
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
