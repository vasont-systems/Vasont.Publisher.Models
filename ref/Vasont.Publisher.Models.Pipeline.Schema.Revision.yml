### YamlMime:ManagedReference
items:
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.Revision
  id: Revision
  parent: Vasont.Publisher.Models.Pipeline.Schema
  children:
  - Vasont.Publisher.Models.Pipeline.Schema.Revision.Change
  - Vasont.Publisher.Models.Pipeline.Schema.Revision.Comment
  - Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionBy
  - Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionByUniqueId
  - Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionDate
  - Vasont.Publisher.Models.Pipeline.Schema.Revision.Version
  langs:
  - csharp
  - vb
  name: Revision
  nameWithType: Revision
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision
  type: Class
  source:
    remote:
      path: src/Pipeline/Schema/Revision.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Revision
    path: Pipeline/Schema/Revision.cs
    startLine: 37
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nThis class represents a recent record of change revision made to the configuration.\n"
  example: []
  syntax:
    content: public class Revision
    content.vb: Public Class Revision
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.Version
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Revision.Version
  id: Version
  parent: Vasont.Publisher.Models.Pipeline.Schema.Revision
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Revision.Version
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.Version
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Revision.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Version
    path: Pipeline/Schema/Revision.cs
    startLine: 42
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the revision version number.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public int Version { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      Public Property Version As Integer
  overload: Vasont.Publisher.Models.Pipeline.Schema.Revision.Version*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.Change
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Revision.Change
  id: Change
  parent: Vasont.Publisher.Models.Pipeline.Schema.Revision
  langs:
  - csharp
  - vb
  name: Change
  nameWithType: Revision.Change
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.Change
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Revision.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Change
    path: Pipeline/Schema/Revision.cs
    startLine: 48
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the revision action that occurred.\n"
  example: []
  syntax:
    content: public RevisionActions Change { get; set; }
    parameters: []
    return:
      type: Vasont.Publisher.Models.Pipeline.Schema.RevisionActions
    content.vb: Public Property Change As RevisionActions
  overload: Vasont.Publisher.Models.Pipeline.Schema.Revision.Change*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.Comment
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Revision.Comment
  id: Comment
  parent: Vasont.Publisher.Models.Pipeline.Schema.Revision
  langs:
  - csharp
  - vb
  name: Comment
  nameWithType: Revision.Comment
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.Comment
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Revision.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Comment
    path: Pipeline/Schema/Revision.cs
    startLine: 53
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the optional comment for the revision.\n"
  example: []
  syntax:
    content: >-
      [MaxLength(1000)]

      public string Comment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(1000)>

      Public Property Comment As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.Revision.Comment*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionBy
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionBy
  id: RevisionBy
  parent: Vasont.Publisher.Models.Pipeline.Schema.Revision
  langs:
  - csharp
  - vb
  name: RevisionBy
  nameWithType: Revision.RevisionBy
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionBy
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Revision.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: RevisionBy
    path: Pipeline/Schema/Revision.cs
    startLine: 59
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the full name of the user who created the revision.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [MaxLength(100)]

      public string RevisionBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <MaxLength(100)>

      Public Property RevisionBy As String
  overload: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionBy*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionByUniqueId
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionByUniqueId
  id: RevisionByUniqueId
  parent: Vasont.Publisher.Models.Pipeline.Schema.Revision
  langs:
  - csharp
  - vb
  name: RevisionByUniqueId
  nameWithType: Revision.RevisionByUniqueId
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionByUniqueId
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Revision.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: RevisionByUniqueId
    path: Pipeline/Schema/Revision.cs
    startLine: 66
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the unique identity of the user who created the revision.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public Guid RevisionByUniqueId { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <Required>

      Public Property RevisionByUniqueId As Guid
  overload: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionByUniqueId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionDate
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionDate
  id: RevisionDate
  parent: Vasont.Publisher.Models.Pipeline.Schema.Revision
  langs:
  - csharp
  - vb
  name: RevisionDate
  nameWithType: Revision.RevisionDate
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionDate
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Revision.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: RevisionDate
    path: Pipeline/Schema/Revision.cs
    startLine: 72
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets the date time when the revision occurred.\n"
  example: []
  syntax:
    content: public DateTime RevisionDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property RevisionDate As Date
  overload: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Publisher.Models.Pipeline.Schema
  commentId: N:Vasont.Publisher.Models.Pipeline.Schema
  name: Vasont.Publisher.Models.Pipeline.Schema
  nameWithType: Vasont.Publisher.Models.Pipeline.Schema
  fullName: Vasont.Publisher.Models.Pipeline.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.Version*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Revision.Version
  name: Version
  nameWithType: Revision.Version
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.Version
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.Change*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Revision.Change
  name: Change
  nameWithType: Revision.Change
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.Change
- uid: Vasont.Publisher.Models.Pipeline.Schema.RevisionActions
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.RevisionActions
  parent: Vasont.Publisher.Models.Pipeline.Schema
  name: RevisionActions
  nameWithType: RevisionActions
  fullName: Vasont.Publisher.Models.Pipeline.Schema.RevisionActions
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.Comment*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Revision.Comment
  name: Comment
  nameWithType: Revision.Comment
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.Comment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionBy*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionBy
  name: RevisionBy
  nameWithType: Revision.RevisionBy
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionBy
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionByUniqueId*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionByUniqueId
  name: RevisionByUniqueId
  nameWithType: Revision.RevisionByUniqueId
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionByUniqueId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionDate*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionDate
  name: RevisionDate
  nameWithType: Revision.RevisionDate
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Revision.RevisionDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
