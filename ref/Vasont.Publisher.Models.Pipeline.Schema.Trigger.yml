### YamlMime:ManagedReference
items:
- uid: Vasont.Publisher.Models.Pipeline.Schema.Trigger
  commentId: T:Vasont.Publisher.Models.Pipeline.Schema.Trigger
  id: Trigger
  parent: Vasont.Publisher.Models.Pipeline.Schema
  children:
  - Vasont.Publisher.Models.Pipeline.Schema.Trigger.Automated
  - Vasont.Publisher.Models.Pipeline.Schema.Trigger.Completions
  - Vasont.Publisher.Models.Pipeline.Schema.Trigger.ContinueJobOnlyOnDiff
  langs:
  - csharp
  - vb
  name: Trigger
  nameWithType: Trigger
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Trigger
  type: Class
  source:
    remote:
      path: src/Pipeline/Schema/Trigger.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Trigger
    path: Pipeline/Schema/Trigger.cs
    startLine: 13
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nThis class represents a pipeline configuration execution trigger.\n"
  example: []
  syntax:
    content: public class Trigger
    content.vb: Public Class Trigger
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Automated
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Trigger.Automated
  id: Automated
  parent: Vasont.Publisher.Models.Pipeline.Schema.Trigger
  langs:
  - csharp
  - vb
  name: Automated
  nameWithType: Trigger.Automated
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Automated
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Trigger.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Automated
    path: Pipeline/Schema/Trigger.cs
    startLine: 18
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a value indicating whether the trigger is automated.\n"
  example: []
  syntax:
    content: public bool Automated { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Automated As Boolean
  overload: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Automated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Completions
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Trigger.Completions
  id: Completions
  parent: Vasont.Publisher.Models.Pipeline.Schema.Trigger
  langs:
  - csharp
  - vb
  name: Completions
  nameWithType: Trigger.Completions
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Completions
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Trigger.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: Completions
    path: Pipeline/Schema/Trigger.cs
    startLine: 26
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a list of other publish jobs that will trigger this configuration in a chained execution event.\n"
  remarks: "\nThe system will allow one publisher pipeline job to execute and then execute another pipeline configuration automatically if defined by ConfigurationId.\n"
  example: []
  syntax:
    content: public List<Guid> Completions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Guid}
    content.vb: Public Property Completions As List(Of Guid)
  overload: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Completions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Vasont.Publisher.Models.Pipeline.Schema.Trigger.ContinueJobOnlyOnDiff
  commentId: P:Vasont.Publisher.Models.Pipeline.Schema.Trigger.ContinueJobOnlyOnDiff
  id: ContinueJobOnlyOnDiff
  parent: Vasont.Publisher.Models.Pipeline.Schema.Trigger
  langs:
  - csharp
  - vb
  name: ContinueJobOnlyOnDiff
  nameWithType: Trigger.ContinueJobOnlyOnDiff
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Trigger.ContinueJobOnlyOnDiff
  type: Property
  source:
    remote:
      path: src/Pipeline/Schema/Trigger.cs
      branch: develop
      repo: git@github.com:vasont-systems/Vasont.Publisher.Models.git
    id: ContinueJobOnlyOnDiff
    path: Pipeline/Schema/Trigger.cs
    startLine: 31
  assemblies:
  - Vasont.Publisher.Models
  namespace: Vasont.Publisher.Models.Pipeline.Schema
  summary: "\nGets or sets a value indicating whether the trigger job will execute only if the content has changed from the source.\n"
  example: []
  syntax:
    content: public bool ContinueJobOnlyOnDiff { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ContinueJobOnlyOnDiff As Boolean
  overload: Vasont.Publisher.Models.Pipeline.Schema.Trigger.ContinueJobOnlyOnDiff*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Vasont.Publisher.Models.Pipeline.Schema
  commentId: N:Vasont.Publisher.Models.Pipeline.Schema
  name: Vasont.Publisher.Models.Pipeline.Schema
  nameWithType: Vasont.Publisher.Models.Pipeline.Schema
  fullName: Vasont.Publisher.Models.Pipeline.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Automated*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Trigger.Automated
  name: Automated
  nameWithType: Trigger.Automated
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Automated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Completions*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Trigger.Completions
  name: Completions
  nameWithType: Trigger.Completions
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Trigger.Completions
- uid: System.Collections.Generic.List{System.Guid}
  commentId: T:System.Collections.Generic.List{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Guid>
  nameWithType: List<Guid>
  fullName: System.Collections.Generic.List<System.Guid>
  nameWithType.vb: List(Of Guid)
  fullName.vb: System.Collections.Generic.List(Of System.Guid)
  name.vb: List(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Publisher.Models.Pipeline.Schema.Trigger.ContinueJobOnlyOnDiff*
  commentId: Overload:Vasont.Publisher.Models.Pipeline.Schema.Trigger.ContinueJobOnlyOnDiff
  name: ContinueJobOnlyOnDiff
  nameWithType: Trigger.ContinueJobOnlyOnDiff
  fullName: Vasont.Publisher.Models.Pipeline.Schema.Trigger.ContinueJobOnlyOnDiff
